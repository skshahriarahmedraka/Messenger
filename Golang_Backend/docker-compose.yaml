
# version: "3.8"
# services:
#   mongo:
#     container_name: mongodb  
#     image: mongo:latest
#     ports:
#       - "27017:27017"

version: "3.8"

# mkdir ~/Documents/database/accord_mongodb ~/Documents/database/accord_postgresql
services:
  mongodb:
    image: mongo:latest
    container_name: accord_mongodb
    command: mongod --auth
    # user: "1000:1000"
    # volumes:
      # - /home/raka/Documents/database/accord_mongodb/:/data/db
      # - './docker database/mongodb/:/data/db'
      # - caddy_data:/data/db:ro
    # env_file:
    #   - ./mongodb.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE : userdb
    ports:
      - '27017-27019:27017-27019'
    volumes:
      - /docker/accordmongodb:/data/db
    networks:
      - accordnetwork
    # - '27017-27019:27017-27019'
  # postgresql:
  #   image: postgres
  #   container_name: accord_postgresql
  #   # restart: always
  #   environment:
  #     - POSTGRES_USER=admin
  #     - POSTGRES_PASSWORD=secret
  #     - POSTGRES_DB=userdb
  #   ports:
  #     - '5432:5432'
  #   volumes: 
  #     - /docker/accordpostgresql:/var/lib/postgresql/data
  #   networks:
  #     - accordnetwork
    
  minio:
    image: quay.io/minio/minio:latest
    container_name: accord_minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=miniosecret
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - /docker/accordminio:/data
    
    networks:
      - accordnetwork
networks:
  accordnetwork:
    driver: bridge 










# Use root/example as user/password credentials

# volumes:
#   caddy_data:
#     name: caddy_data
#     driver_opts:
#       o: bind
#       device: /mnt/golang/vscode Projects/Accord/p13GorillaMuxAccord/docker database/mongodb/
#       type: none